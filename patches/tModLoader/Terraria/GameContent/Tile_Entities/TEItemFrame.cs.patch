--- src/Terraria/Terraria/GameContent/Tile_Entities/TEItemFrame.cs
+++ src/tModLoader/Terraria/GameContent/Tile_Entities/TEItemFrame.cs
@@ -1,9 +_,12 @@
 using System.IO;
 using Terraria.DataStructures;
+using Terraria.ID;
+using Terraria.ModLoader;
+using Terraria.ModLoader.IO;
 
 namespace Terraria.GameContent.Tile_Entities
 {
-	public class TEItemFrame : TileEntity
+	public sealed partial class TEItemFrame : TileEntity
 	{
 		private static byte _myEntityID;
 		public Item item;
@@ -71,13 +_,30 @@
 		}
 
 		public override void WriteExtraData(BinaryWriter writer, bool networkSend) {
-			writer.Write((short)item.netID);
-			writer.Write(item.prefix);
-			writer.Write((short)item.stack);
+			if (networkSend && !ModNet.AllowVanillaClients) {
+				writer.WriteVarInt(item.netID);
+				writer.Write(item.prefix);
+				writer.WriteVarInt(item.stack);
+
+				return;
+			}
+
+			writer.Write((short)(item.netID >= ItemID.Count ? 0 : item.netID));
+			writer.Write((byte)(item.prefix >= PrefixID.Count ? 0 : item.prefix));
+			writer.Write((short)(item.stack >= short.MaxValue ? short.MaxValue : item.stack));
 		}
 
 		public override void ReadExtraData(BinaryReader reader, bool networkSend) {
 			item = new Item();
+
+			if (networkSend && !ModNet.AllowVanillaClients) {
+				item.netDefaults(reader.ReadVarInt());
+				item.Prefix(reader.ReadByte());
+				item.stack = reader.ReadVarInt();
+
+				return;
+			}
+
 			item.netDefaults(reader.ReadInt16());
 			item.Prefix(reader.ReadByte());
 			item.stack = reader.ReadInt16();
